<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="status.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="tools.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>101, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAgAAAwAAA4BARMAAhcBABoAAR0BACAA
        ACQAACYBAigCAioBBCoAAioAAisAAisCAioBAigAACYAACQBACAAAB4BABoBARkCAhQCAREAAAwAAAgA
        AQIAAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAwA
        ABABABQBARkAAB4AACIAACYDASsABSwABy4CCzECCzACDTMBDjQACzEBDjQBDTUADDQBCzMCCzEABy4C
        BC0CAioAACQAASAAAB4BARkDAxUAABAAAAoAAQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAEAAAABAAIAAQkAAA4AARMDARcAAR0EACMBACgBAywECDEBDDIADTMAETYAFD0AGEIBGUcB
        HUwBHksAGkgBGkYBF0EAFD0BEjkCEjcADzYBDDIBCC8BAywBACcCASMCAB0BAhcBARMBAQ8AAQkBAAIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAAAAAAAAAAAAAQIAAAoAABAAABQBABoAAB4AACYABC0BCTEA
        DTMAETgAF0cBH1ABIlQBIlADIEwCIEkBGjwAGTsEIksCJVEBJ1cBKV0BJFYBHUwBF0EBEzwAETgADDQB
        CTEBAysAACQDACABARkCARUAABAAAAgBAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAQMBAAoB
        ABABAhcAAR0AACICAioCCTABDTUBETsCGUYCIlMEHkMFEykFCxIEBQMCAAACAAACAAAAAAACAAACAAAC
        BAUGDBcCFzIFKVEDK1wCI1UBGUMAFkABETwADDIBCC8CAioAACIAAR0BAhcBABAAAAoBAAQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAAIAAAoAABABAhcBAR8AACQABSwBDDICEDoBFT4CGkgCIEkCBAQCAAAAAAAA
        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
        ABABABQBARkCAB4AACIAACYCAioABSoCBi8ACzEBDDIADTMBDTUBDTUBDTUBDTUDDjQCDDQCCzECBy4A
        BC0CAioAACQBACAAAR0BARkCAhQAABAAAAoAAQYAAAAAAAAAAAAAAAAAAAAAAQAAAAABAQEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAgAAAwBABACAhQBAhcBABoAAB4CASEAACQDACcBAigDAysB
        BCoAAioAAioAAioCAioBAigAACYAACQBACAAAB4CAB0BAhYDAhYAAA4AAAwAAAUAAQIAAAACAAAAAAEB
        AQEAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>